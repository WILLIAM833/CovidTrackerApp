{"version":3,"sources":["Components/Header.jsx","Components/Statedata.jsx","Components/India.jsx","Components/World.jsx","Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","style","color","fontSize","marginLeft","text","speed","Toggle","aria-controls","Collapse","id","Nav","className","to","href","Component","StateData","state","stateData","fetch","response","json","data","this","setState","keys","Object","Accordion","map","item","ky","districts","districtData","total_active","total_confirmed","total_deaths","total_recover","district_list","x","active","confirmed","deceased","recovered","ob","push","console","log","Card","as","Button","eventKey","Body","itm","district_name","India","datas","src","width","Title","cases","critical","deaths","World","country","countryInfo","flag","Footer","Modal","Dialog","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b76e34eb.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Wave } from 'react-animated-text';\r\nimport { FcGlobe,FcBusinessman } from \"react-icons/fc\";\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    render(){\r\n\r\n     \r\n        return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\"  >\r\n            <h2 style={{color:\"white\"}}>Covid19 Tracker by </h2>\r\n            \r\n    <div style={{fontSize:\"24px\",color:\"white\",marginLeft:\"5px\" }}>                  \r\n <Wave text=\"KEVIN JACOB\" speed=\"3\" />\r\n </div>  \r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n              <Nav className=\"ml-auto\" >\r\n                <Link className=\"nav-link\" to=\"/india\">India</Link>\r\n                <FcGlobe/>\r\n                <Link className=\"nav-link\" to=\"/world\">World</Link>\r\n              </Nav>\r\n            \r\n              <Nav className=\"ml-auto\" >\r\n              <FcBusinessman/>\r\n                     <a style={{color:\"white\"}} href=\"https://kevinjacob2001.github.io\">Meet me!</a>\r\n                     </Nav>\r\n        \r\n\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\n\r\nimport {Card,Accordion,Button} from 'react-bootstrap';\r\n\r\nclass StateData extends Component{\r\nconstructor(){\r\n    super()\r\n    this.state={\r\n        stateData:{}\r\n    }\r\n}\r\n\r\nasync componentDidMount(){\r\nconst response=await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\nconst data= await response.json();\r\n\r\nthis.setState({stateData:data})\r\n\r\n}\r\n\r\n\r\n\r\n    render(){\r\n\r\nlet keys=Object.keys(this.state.stateData)\r\n\r\n\r\n        return(\r\n            <div>\r\n<div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n\r\n    <Accordion>\r\n\r\n\r\n{\r\n\r\nkeys.map((item,ky)=>{\r\n let districts=this.state.stateData[item].districtData;\r\n let district_keys=Object.keys(districts);\r\n\r\n let total_active=0;\r\nlet total_confirmed=0;\r\nlet total_deaths=0;\r\nlet total_recover=0;\r\n\r\nlet district_list=[]\r\n\r\nfor(let x in districts){\r\n    total_active+=districts[x].active;\r\n    total_confirmed+=districts[x].confirmed;\r\n    total_deaths+=districts[x].deceased;\r\n    total_recover+=districts[x].recovered;\r\n    let ob=districts[x];\r\n    ob[\"district_name\"]=x;\r\ndistrict_list.push(ob)\r\n}\r\n\r\nconsole.log(district_list)\r\n\r\n\r\n\r\n\r\n return(\r\n     <div>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"primary\" eventKey={ky}>\r\n {item}- <span className=\" btn btn-outline-dark p-1 mr-2\">Total Cases-{total_confirmed}</span> <span className=\"btn-outline-dark btn p-1 mr-2\">  Active-{total_active} </span>   <span className=\"btn-outline-dark btn p-1 mr-2\">Recovered-{total_recover}</span> <span className=\"btn-outline-dark btn p-1 mr-2\">Death-{total_deaths} </span>\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey={ky}>\r\n <Card.Body>\r\n      <table className=\"table table-bordered table-stripped col-12\">\r\n<thead>\r\n    <tr>\r\n      <td>District</td> \r\n      <td>Confirmed</td>\r\n      <td>Active</td>\r\n      <td>Recovered</td>\r\n  \r\n    </tr> \r\n</thead>\r\n<tbody>\r\n{\r\n    district_list.map((itm,ky)=>{\r\n    return(\r\n        <tr> \r\n\r\n<td>{itm.district_name}</td>\r\n<td>{itm.confirmed}</td>\r\n<td>{itm.active}</td>\r\n<td>{itm.recovered}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n    )} \r\n</tbody>\r\n\r\n      </table>\r\n\r\n       </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n     </div>\r\n ) \r\n})\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  \r\n</Accordion>\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateData;","import React,{Component} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Statedata from './Statedata'\r\nimport StateData from './Statedata';\r\n\r\n\r\nclass India extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            data:[]\r\n        }\r\n    }\r\n   \r\n   async componentDidMount(){\r\n       const response=await fetch(\"https://corona.lmao.ninja/v2/countries/india\")\r\n    const datas=await response.json();\r\n    console.log(datas)\r\n    this.setState({data:datas})\r\n   }\r\n   \r\n    render(){\r\n\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\" >\r\n<img src=\"https://www.countryflags.io/in/shiny/64.png\"/>\r\n<h3>INDIA</h3>\r\n                </div>\r\n           \r\n\r\n<div className=\"col-md-12\">\r\n\r\n<div className=\"row\" >\r\n\r\n<div className=\"col-md-3 col-sm-6\">\r\n<Card className=\"badge badge-primary\" style={{ width: '18rem' }}>   \r\n<Card.Body className=\"text-center\">\r\n<Card.Title>\r\n\r\nTOTAL CASES\r\n</Card.Title>\r\n<h3>{this.state.data.cases}</h3>\r\n\r\n</Card.Body>\r\n</Card>\r\n</div>\r\n\r\n\r\n<div className=\"col-md-3 col-sm-6\">\r\n<Card className=\"badge badge-warning\" style={{ width: '18rem' }}>   \r\n<Card.Body className=\"text-center\">\r\n<Card.Title style={{color:\"white\"}} >ACTIVE CASES</Card.Title>\r\n<h3 style={{color:\"white\"}}>{this.state.data.active}</h3>\r\n<h6   style={{color:\"white\"}}>Critical:{this.state.data.critical}</h6>\r\n</Card.Body>\r\n</Card>\r\n</div>\r\n\r\n\r\n<div className=\"col-md-3 col-sm-6\">\r\n<Card className=\"badge badge-success\" style={{ width: '18rem' }}>   \r\n<Card.Body className=\"text-center\">\r\n<Card.Title>RECOVERED</Card.Title>\r\n<h3>{this.state.data.recovered}</h3>\r\n\r\n</Card.Body>\r\n</Card>\r\n</div>\r\n\r\n<div className=\"col-md-3 col-sm-6\">\r\n<Card className=\"badge badge-danger\" style={{ width: '18rem' }}>   \r\n<Card.Body className=\"text-center\">\r\n<Card.Title>TOTAL DEATHS</Card.Title>\r\n<h3>{this.state.data.deaths}</h3>\r\n\r\n</Card.Body>\r\n</Card>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<div className=\"col-md-12\">\r\n<StateData/>\r\n</div>\r\n\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default India;","import React,{Component} from 'react';\r\n\r\n\r\nclass World extends Component{\r\nconstructor(){\r\n    super();\r\n    this.state={\r\n        data:[]\r\n    }\r\n}\r\n\r\nasync componentDidMount(){\r\nconst response=await fetch(\"https://corona.lmao.ninja/v2/countries\")\r\nconst datas=await response.json();\r\nthis.setState({data:datas})\r\n}\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n       \r\n<div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n\r\n<table className=\"table table-primary table-striped col-12\">\r\n    <thead >\r\n        <tr >\r\n<td>Country</td>\r\n<td>Total Cases</td>\r\n<td>Recovered</td>\r\n<td>Death</td>\r\n        </tr>\r\n</thead>\r\n\r\n<tbody>\r\n{\r\n    this.state.data.map((itm,ky)=>{\r\n   return(\r\n \r\n<tr>\r\n    <td>{itm.country}\r\n    <img style={{width:'65px', marginLeft:\"50px\"}} src={itm.countryInfo.flag}/>\r\n    </td>\r\n    <td>{itm.cases}</td>\r\n   <td>{itm.recovered}</td>\r\n   <td>{itm.deaths}</td>\r\n\r\n</tr>\r\n \r\n   )\r\n    }\r\n   )\r\n}\r\n</tbody>\r\n           \r\n</table> \r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default World;","import React from 'react';\r\nimport {Modal,Button} from 'react-bootstrap'\r\n\r\nfunction Footer(){\r\n\r\nreturn(\r\n    <div>\r\n<Modal.Dialog>\r\n  <Modal.Header className=\"mx-auto\">\r\n    <Modal.Title>Covid Tracker Application</Modal.Title>\r\n  </Modal.Header>\r\n\r\n  <Modal.Body className=\"mx-auto\">\r\n    <p>developed by Kevin Jacob</p>\r\n  </Modal.Body>\r\n\r\n  \r\n</Modal.Dialog>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nimport Header from './Components/Header';\r\nimport India from './Components/India';\r\nimport World from './Components/World';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component{\r\n\r\nrender(){\r\n  return(\r\n\r\n<div className=\"container-fluid\">\r\n\r\n<Router>\r\n\r\n<Header/>\r\n\r\n\r\n<Switch>\r\n\r\n\r\n  <Route exact path=\"/CovidTrackerApp\">\r\n<India/>\r\n  </Route>\r\n\r\n  <Route  path=\"/india\">\r\n<India/>\r\n  </Route>\r\n\r\n  <Route path=\"/world\">\r\n<World/>\r\n  </Route>\r\n\r\n\r\n</Switch>\r\n<Footer/>\r\n</Router>\r\n\r\n\r\n\r\n</div>\r\n\r\n  )\r\n}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}